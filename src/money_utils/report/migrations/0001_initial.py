# Generated by Django 2.2.10 on 2020-03-29 15:56

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Member",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("first_name", models.CharField(max_length=255)),
                ("nick", models.CharField(max_length=255)),
                ("last_name", models.CharField(max_length=255)),
                ("email", models.TextField(blank=True, null=True)),
                ("entry_date", models.DateField(blank=True, null=True)),
                ("exit_date", models.DateField(blank=True, null=True)),
                (
                    "pay_interval",
                    models.TextField(
                        choices=[
                            ("MONTHLY", "Monthly"),
                            ("SIX_MONTH", "Six_month"),
                            ("YEARLY", "Yearly"),
                            ("VARIABLE", "Variable"),
                        ]
                    ),
                ),
                (
                    "last_fee",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "fee",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
            ],
            options={
                "db_table": "member",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Status",
            fields=[
                (
                    "key",
                    models.CharField(max_length=255, primary_key=True, serialize=False),
                ),
                ("value_str", models.TextField(blank=True, null=True)),
                ("value_dt", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "status",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Transaction",
            fields=[
                (
                    "tx_id",
                    models.CharField(max_length=255, primary_key=True, serialize=False),
                ),
                (
                    "type",
                    models.TextField(
                        blank=True,
                        choices=[
                            ("MEMBER_FEE", "Member_fee"),
                            ("PROJECT_EXPENSE", "Project_expense"),
                        ],
                        null=True,
                    ),
                ),
                ("import_date", models.DateTimeField(auto_now_add=True)),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("status", models.TextField(blank=True, null=True)),
                ("funds_code", models.TextField(blank=True, null=True)),
                ("id", models.TextField(blank=True, null=True)),
                ("customer_reference", models.TextField(blank=True, null=True)),
                ("bank_reference", models.TextField(blank=True, null=True)),
                ("extra_details", models.TextField(blank=True, null=True)),
                ("currency", models.TextField(blank=True, null=True)),
                ("date", models.DateField(blank=True, null=True)),
                ("entry_date", models.DateField(blank=True, null=True)),
                ("transaction_code", models.TextField(blank=True, null=True)),
                ("posting_text", models.TextField(blank=True, null=True)),
                ("prima_nota", models.TextField(blank=True, null=True)),
                ("purpose", models.TextField()),
                ("applicant_bin", models.TextField(blank=True, null=True)),
                ("applicant_iban", models.TextField(blank=True, null=True)),
                ("applicant_name", models.TextField(blank=True, null=True)),
                ("return_debit_notes", models.TextField(blank=True, null=True)),
                ("recipient_name", models.TextField(blank=True, null=True)),
                ("additional_purpose", models.TextField(blank=True, null=True)),
                ("gvc_applicant_iban", models.TextField(blank=True, null=True)),
                ("gvc_applicant_bin", models.TextField(blank=True, null=True)),
                ("end_to_end_reference", models.TextField(blank=True, null=True)),
                (
                    "additional_position_reference",
                    models.TextField(blank=True, null=True),
                ),
                ("applicant_creditor_id", models.TextField(blank=True, null=True)),
                ("purpose_code", models.TextField(blank=True, null=True)),
                ("additional_position_date", models.TextField(blank=True, null=True)),
                ("deviate_applicant", models.TextField(blank=True, null=True)),
                ("deviate_recipient", models.TextField(blank=True, null=True)),
                (
                    "frst_one_off_recc",
                    models.TextField(
                        blank=True, db_column="FRST_ONE_OFF_RECC", null=True
                    ),
                ),
                (
                    "old_sepa_ci",
                    models.TextField(blank=True, db_column="old_SEPA_CI", null=True),
                ),
                (
                    "old_sepa_additional_position_reference",
                    models.TextField(
                        blank=True,
                        db_column="old_SEPA_additional_position_reference",
                        null=True,
                    ),
                ),
                ("settlement_tag", models.TextField(blank=True, null=True)),
                ("debitor_identifier", models.TextField(blank=True, null=True)),
                ("compensation_amount", models.TextField(blank=True, null=True)),
                (
                    "original_amount",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                (
                    "member",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="report.Member",
                    ),
                ),
            ],
            options={
                "db_table": "transaction",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="FeeEntry",
            fields=[
                (
                    "id",
                    models.CharField(max_length=255, primary_key=True, serialize=False),
                ),
                ("month", models.DateField()),
                ("fee", models.DecimalField(decimal_places=2, max_digits=10)),
                ("pay_interval", models.CharField(max_length=9)),
                (
                    "member",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="report.Member",
                    ),
                ),
                (
                    "tx",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="report.Transaction",
                    ),
                ),
            ],
            options={
                "db_table": "fee_entry",
                "managed": True,
                "unique_together": {("member", "month")},
            },
        ),
    ]
